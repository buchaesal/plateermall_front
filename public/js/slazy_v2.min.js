function SlazyStart(n) { console.log("Slazy Start"); (typeof n == "undefined" || n == null || n == "") && (n = ".container"); sLazy = new Slazy({ src: "data-src", container: n, offset: 1600 }) } function SlazyRestart(n) { console.log("Request Slazy Restart"); sLazy ? sLazy.IsDestroyed() ? (sLazy = undefined, SlazyStart(n)) : console.log("Skip : Slazy Running") : SlazyStart(n) } function SlazyReSet(n) { console.log("Request Slazy Reset"); sLazy && (sLazy.Forcedestroy(), SlazyStart(n), console.log("called Slazy Reset")) } var bInit = !1, bInitEleCnt = 0, CurrentWindowScrollY = 0, CustomLastCalled = new Date, sLazy; (function (n, t) { typeof define == "function" && define.amd ? define(t) : typeof exports == "object" ? module.exports = t() : n.Slazy = t() })(this, function () { "use strict"; function w(n) { var t = n._util; t.elements = ut(n.options); t.count = t.elements.length; t.destroyed && (t.destroyed = !1, n.options.container && i(n.options.container, function (n) { r(n, "scroll", t.validateT) }), r(window, "resize", t.saveViewportOffsetT), r(window, "resize", t.validateT), r(window, "scroll", t.validateT)); u(n, 1) } function u(n, t) { for (var u, f = 0, i = n._util, r = 0; r < i.count; r++) u = i.elements[r], (rt(u, n.options) || l(u, n.options.successClass)) && (n.load(u), i.elements.splice(r, 1), i.count--, r--, f++); console.log("called validate > calltype = " + t + ", util.count = " + i.count + ", appply = " + f); i.count === 0 && n.destroy() } function rt(t, i) { var f = t.getBoundingClientRect(), u, r; if (i.initViewCount > 0, i.container && y && (u = t.closest(i.containerClass), u)) { if (r = u.getBoundingClientRect(), s(r, n)) { var e = r.top - i.offset, o = r.right + i.offset, h = r.bottom + i.offset, c = r.left - i.offset, l = { top: e > n.top ? e : n.top, right: o < n.right ? o : n.right, bottom: h < n.bottom ? h : n.bottom, left: c > n.left ? c : n.left }; return s(f, l) } return !1 } return s(f, n) } function s(n, t) { return n.right >= t.left && n.bottom >= t.top && n.left <= t.right && n.top <= t.bottom } function b(n, u, e) { var w; if (!l(n, e.successClass) && (u || e.loadInvisible || n.offsetWidth > 0 && n.offsetHeight > 0)) if (w = f(n, o) || f(n, e.src), w) { var tt = w.split(e.separator), y = tt[v && tt.length > 1 ? 1 : 0], rt = f(n, e.srcset), ut = c(n, "img"), b = n.parentNode, ft = b && c(b, "picture"); if (ut || n.src === undefined) { var s = new Image, g = function () { e.error && e.error(n, "invalid"); a(n, e.errorClass); t(s, "error", g); t(s, "load", nt) }, nt = function () { ut ? ft || d(n, y, rt) : n.style.backgroundImage = 'url("' + y + '")'; h(n, e); t(s, "load", nt); t(s, "error", g) }; ft && (s = n, i(b.getElementsByTagName("source"), function (n) { k(n, p, e.srcset) })); r(s, "error", g); r(s, "load", nt); d(s, y, rt) } else n.src = y, h(n, e) } else c(n, "video") ? (i(n.getElementsByTagName("source"), function (n) { k(n, it, e.src) }), n.load(), h(n, e)) : (e.error && e.error(n, "missing"), a(n, e.errorClass)) } function h(n, t) { a(n, t.successClass); t.success && t.success(n); e(n, t.src); e(n, t.srcset); i(t.breakpoints, function (t) { e(n, t.src) }) } function k(n, t, i) { var r = f(n, i); r && (g(n, t, r), e(n, i)) } function d(n, t, i) { i && g(n, p, i); n.src = t } function g(n, t, i) { n.setAttribute(t, i) } function f(n, t) { return n.getAttribute(t) } function e(n, t) { n.removeAttribute(t) } function c(n, t) { return n.nodeName.toLowerCase() === t } function l(n, t) { return (" " + n.className + " ").indexOf(" " + t + " ") !== -1 } function a(n, t) { l(n, t) || (n.className += " " + t) } function ut(n) { for (var t = [], i = n.root.querySelectorAll(n.selector), r = i.length; r--; t.unshift(i[r])); return t } function nt(t) { n.bottom = (window.innerHeight || document.documentElement.clientHeight) + t; n.right = (window.innerWidth || document.documentElement.clientWidth) + t } function r(n, t, i) { n.attachEvent ? n.attachEvent && n.attachEvent("on" + t, i) : n.addEventListener(t, i, { capture: !1, passive: !0 }) } function t(n, t, i) { n.detachEvent ? n.detachEvent && n.detachEvent("on" + t, i) : n.removeEventListener(t, i, { capture: !1, passive: !0 }) } function i(n, t) { var r, i; if (n && t) for (r = n.length, i = 0; i < r && t(n[i], i) !== !1; i++); } function tt(n, t, i) { var r = 0; return function () { var u = +new Date; u - r < t || (r = u, n.apply(i, arguments)) } } var o, n, v, y, it = "src", p = "srcset"; return function (r) { var s, f, e; document.querySelectorAll || (s = document.createStyleSheet(), document.querySelectorAll = function (n, t, i, r, u) { for (u = document.all, t = [], n = n.replace(/\[for\b/gi, "[htmlFor").split(","), i = n.length; i--;) { for (s.addRule(n[i], "k:v"), r = u.length; r--;) u[r].currentStyle.k && t.push(u[r]); s.removeRule(0) } return t }); this.IsDestroyed = function () { var n = f._util; return n.destroyed }; this.Forcedestroy = function () { f.destroy() }; f = this; e = f._util = {}; e.elements = []; e.destroyed = !0; f.options = r || {}; f.options.initViewCount = f.options.initViewCount || 5; f.options.reloadTop = f.options.reloadTop || !0; f.options.error = f.options.error || !1; f.options.offset = f.options.offset || 100; f.options.root = f.options.root || document; f.options.success = f.options.success || !1; f.options.selector = f.options.selector || ".s-lazy"; f.options.separator = f.options.separator || "|"; f.options.containerClass = f.options.container; f.options.container = f.options.containerClass ? document.querySelectorAll(f.options.containerClass) : !1; f.options.errorClass = f.options.errorClass || "s-error"; f.options.breakpoints = f.options.breakpoints || !1; f.options.loadInvisible = f.options.loadInvisible || !1; f.options.successClass = f.options.successClass || "s-loaded"; f.options.validateDelay = f.options.validateDelay || 25; f.options.saveViewportOffsetDelay = f.options.saveViewportOffsetDelay || 50; f.options.srcset = f.options.srcset || "data-srcset"; f.options.src = o = f.options.src || "data-src"; y = Element.prototype.closest; v = window.devicePixelRatio > 1; n = {}; n.top = 0 - f.options.offset; n.left = 0 - f.options.offset; f.revalidate = function () { w(f) }; f.load = function (n, t) { var r = this.options; n && n.length === undefined ? b(n, t, r) : i(n, function (n) { b(n, t, r) }) }; f.destroy = function () { var n = f._util; f.options.container && i(f.options.container, function (i) { t(i, "scroll", n.validateT) }); t(window, "scroll", n.validateT); t(window, "resize", n.validateT); t(window, "resize", n.saveViewportOffsetT); n.count = 0; n.elements.length = 0; n.destroyed = !0 }; e.validateT = tt(function () { u(f, 1); var n = new Date - CustomLastCalled; n >= 1e3 && (console.log("Custom Called : validate(scope)"), setTimeout(function () { u(f, 2) }, 500), setTimeout(function () { u(f, 2) }, 1e3), CustomLastCalled = new Date) }, f.options.validateDelay, f); e.saveViewportOffsetT = tt(function () { nt(f.options.offset) }, f.options.saveViewportOffsetDelay, f); nt(f.options.offset); i(f.options.breakpoints, function (n) { if (n.width >= window.screen.width) return o = n.src, !1 }); setTimeout(function () { w(f) }) } })